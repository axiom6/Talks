<section id="ReactiveManifesto">
      <section id="">
        <h2>The Reactive Manifesto</h2>
        <a href="http://www.reactivemanifesto.org/">www.reactivemanifesto.org/</a>
        <img src="../../img/reactive/reactive-traits.svg" class="rx-svg">
        <ul style="text-align:left; font-size:24px; list-style-type: none;">
          <li><img src="../../img/reactive/responsive.svg" class="rx-icon"><span class="width240">Responsive:    </span><span class="width150">In Memory </span>Always respond meaningfully in a timely manner</li>
          <li><img src="../../img/reactive/elastic.svg" class="rx-icon"><span class="width240">Elastic:       </span><span class="width150">Cluster   </span>Stay responsive under varying workload</li>
          <li><img src="../../img/reactive/resilient.svg" class="rx-icon"><span class="width240">Resilient:     </span><span class="width150">RDD       </span>Stay responsive in the face of failure</li>
          <li><img src="../../img/reactive/message.svg" class="rx-icon"><span class="width240">Message Driven:</span><span class="width150">Streaming </span>Wrap and stream messages asynchronously</li>
        </ul>
      </section>

      <section id="Responsive">
        <h2 class="rx-h2"><img src="../../img/reactive/responsive.svg" class="rx-h2-img"><span class="rx-h2-span">Responsive</span></h2>
        <h4>Always respond meaningfully in a timely manner</h4>
        <ul>
          <li>&quot;In Memory&quot; improves performance by 1-2 orders of magnitude</li>
          <li>Formulate meaningful response metrics for Data Science</li>
          <li>Leveage statistics to shrink sample populations</li>
          <li>Weigh benefits between real time and near time</li>
          <li>Keep your common sense</li>
          <li>Don&apos;t let brute force do your thinking for you</li>
        </ul>
      </section>

      <section id="Elastic">
        <h2 class="rx-h2"><img src="../../img/reactive/elastic.svg" class="rx-h2-img"><span class="rx-h2-span">Elastic</span></h2>
        <h4>Stay responsive under varying workload</h4>
        <ul>
          <li>Elasticity is the key value proposition for cloud hosting</li>
          <li>Leveage Spark&apos;s integration with Akka Mesos Myraid and YARN</li>
          <li>Always have spare resources available to spin up for peak demand</li>
          <li>Spend the extra money to replicate data</li>
        </ul>
      </section>

      <section id="Resilient">
        <h2 class="rx-h2"><img src="../../img/reactive/resilient.svg" class="rx-h2-img"><span class="rx-h2-span">Resilient</span></h2>
        <h4>Stay responsive in the face of failure</h4>
        <ul>
          <li>Clustered servers and network links fail all the time</li>
          <li>Spark Core monitors and responds to cluster failure</li>
          <li>RDDs &quot;Resilient&quot; Distributed Datasets says it all</li>
          <li>RDDs shard the data over a cluster</li>
          <li>RDDs reconstitute shards lost due to node / link failures</li>
          <li>RDDs in Spark can rerun their transforms to recreate lost data</li>
        </ul>
      </section>

      <section id="MessageDriven">
        <h2 class="rx-h2"><img src="../../img/reactive/message.svg" class="rx-h2-img"><span class="rx-h2-span">Message Driven</span></h2>
        <h4>Wrap and stream messages asynchronously</h4>
        <h4>Message Streams facilitate Data Science with these benefits</h4>
        <table style="font-size:18pt; color:wheat;">
          <thead>
            <tr><th style="text-align:center;">Message Feature</th><th style="text-align:center;">Data Science Benefit</th></tr>
          </thead>
          <tbody>
            <tr><td>Asynchronous</td><td>The system knows more about concurrency than humans</td></tr>
            <tr><td>Error Delegation</td><td>Errors become first class citizens that are treated properly</td></tr>
            <tr><td>Location Transparency</td><td>Processes are not locked into specific server configuations</td></tr>
            <tr><td>Publish &amp; Subscribe</td><td>Allows roles to be defined from a Data Science perspective</td></tr>
            <tr><td>Component Isolation</td><td>Allows components to focus on their assigned tasks</td></tr>
            <tr><td>Loose Coupling</td><td>Precise instead of accidental interactions</td></tr>
            <tr><td>Back Pressure</td><td>Message streams can be throttled to relieve resources</td></tr>
            <tr><td>Functional</td><td>A programing paradigm well suited for data processing</td></tr>
          </tbody>
        </table>
      </section>
    </section>